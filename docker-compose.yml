version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - type: bind
        source: ./config/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: volume
        source: prometheus_data
        target: /prometheus
    expose:
      - "9090"
    networks:
      - monitoring
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true
      - type: bind
        source: /sys
        target: /host/sys
        read_only: true
      - type: bind
        source: /
        target: /rootfs
        read_only: true
    expose:
      - "9100"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3002:3000"
    volumes:
      - type: bind
        source: ./config/datasources.yml
        target: /etc/grafana/provisioning/datasources/datasources.yml
        read_only: true
      - type: bind
        source: ./config/dashboard.yml
        target: /etc/grafana/provisioning/dashboards/dashboard.yml
        read_only: true
      - type: bind
        source: ./config/dashboard-metrics.json
        target: /var/lib/grafana/dashboards/dashboard-metrics.json
        read_only: true
      - type: bind
        source: ./config/dashboard-docker.json
        target: /var/lib/grafana/dashboards/dashboard-docker.json
        read_only: true
      - type: volume
        source: grafana_data
        target: /var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    restart: always
    environment:
      - CADVISOR_ENABLED=${CADVISOR_ENABLED:-1}
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    expose:
      - "8080"
    networks:
      - monitoring
    depends_on:
      - prometheus
    command: >
      sh -c "if [ \"${CADVISOR_ENABLED}\" = \"1\" ]; then
                exec /usr/bin/cadvisor --housekeeping_interval=15s -docker_only=true;
              else
                echo 'cAdvisor is disabled';
                sleep infinity;
              fi"